@page "/githuboverview"
<PageTitle>Projects Overview</PageTitle>
@using DevPortfolio.Services
@using DevPortfolio.Models
@inject IGitHubService GitHub
@rendermode InteractiveServer

<PageTitle>Projects Overview</PageTitle>

<div class="container my-4">
    <header class="mb-4">
        <h1 class="mb-1">Projects</h1>
        <p class="text-muted mb-0">Latest public repositories from my GitHub.</p>
    </header>

    @if (_loading)
    {
        <p>Loading repositories…</p>
    }
    else if (!string.IsNullOrWhiteSpace(_error))
    {
        <div class="alert alert-danger" style="white-space:pre-wrap">@_error</div>
    }
    else if (_repos?.Count == 0)
    {
        <p>No repositories found.</p>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-xl-3 g-3">
            @foreach (var r in _repos!)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm">
                        <div class="card-body d-flex flex-column">
                            <h2 class="h5 card-title mb-1">
                                <a href="@r.HtmlUrl" target="_blank" rel="noopener">@r.Name</a>
                            </h2>
                            @if (!string.IsNullOrWhiteSpace(r.Description))
                            {
                                <p class="card-text flex-grow-1">@r.Description</p>
                            }
                            else
                            {
                                <div class="flex-grow-1"></div>
                            }
                            <div class="mt-2 small text-muted">
                                @if (!string.IsNullOrWhiteSpace(r.Language))
                                {
                                    <span>@r.Language</span>
                        
                                    <span> · </span>
                                }
                                <span>★ @r.Stars</span><span> · </span>
                                <span>Updated @r.UpdatedAt.LocalDateTime.ToString("yyyy-MM-dd")</span>
                                @if (r.Fork)
                                {
                                    <span> · fork</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<RepoDto>? _repos;
    private bool _loading = true;
    private string? _error;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _repos = (await GitHub.GetReposAsync()).ToList();
        }
        catch (Exception ex)
        {
            _error = ex.Message;
        }
        finally
        {
            _loading = false;
        }
    }
}
